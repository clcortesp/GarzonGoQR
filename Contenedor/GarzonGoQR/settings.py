"""
Django settings for GarzonGoQR project.

Generated by 'django-admin startproject' using Django 5.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-s6w+kaw&x3^n^tr9e3kweoc3@@buy2gnsxxef1cbm@3-ha_z#h'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',  # Para filtros como {{ value|floatformat }}
    
    # Channels para WebSocket
    'channels',

    # Apps de la empresa
    'restaurants',
    'menu',
    'orders',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'restaurants.middleware.TenantMiddleware',  # ‚Üê Agregar TEMPRANO
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'restaurants.middleware.TenantContextMiddleware',  # ‚Üê Para templates
    'restaurants.table_session_manager.TableSessionMiddleware',  # ‚Üê Para sesiones de mesa
]

ROOT_URLCONF = 'GarzonGoQR.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],  # ‚Üê Agregar directorio templates
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'menu.context_processors.cart_processor',
            ],
        },
    },
]

WSGI_APPLICATION = 'GarzonGoQR.wsgi.application'
ASGI_APPLICATION = 'GarzonGoQR.asgi.application'

# Channels configuration
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('127.0.0.1', 6379)],
        },
    },
}


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'django',
        'USER': 'postgres',  # o 'garzongoqr_user' si creaste uno espec√≠fico
        'PASSWORD': '290806Amalia',  # Cambia por tu contrase√±a real
        'HOST': 'localhost',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'es'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Para el manejo de archivos (logo)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Configuraci√≥n del carrito de compras
CART_SESSION_ID = 'cart'
SESSION_COOKIE_AGE = 86400  # 24 horas

# ============================================================================
# üì± CONFIGURACI√ìN DEL SISTEMA QR DIN√ÅMICO
# ============================================================================

# üîß URL base para c√≥digos QR (opcional - si no se especifica, usa detecci√≥n autom√°tica)
# QR_BASE_URL = None  # Ejemplo: "https://miapp.com"

# üîí Protocolo para URLs de QR cuando se usan dominios personalizados
USE_HTTPS = not DEBUG  # HTTPS en producci√≥n, HTTP en desarrollo

# üïê Configuraci√≥n de sesiones de mesa
TABLE_SESSION_DURATION = 60      # Duraci√≥n total de sesi√≥n (minutos)
TABLE_INACTIVITY_TIMEOUT = 45    # Tiempo m√°ximo sin actividad (minutos)

# ============================================================================
# üåç CONFIGURACI√ìN POR ENTORNO (OPCIONAL)
# ============================================================================

# Obtener entorno desde variable de entorno
ENVIRONMENT = os.environ.get('DJANGO_ENV', 'development')

if ENVIRONMENT == 'production':
    # üöÄ PRODUCCI√ìN - Configurar cuando subas a servidor
    # QR_BASE_URL = "https://tudominio.com"
    # USE_HTTPS = True
    pass
    
elif ENVIRONMENT == 'staging':
    # üß™ STAGING - Configurar si tienes servidor de pruebas  
    # QR_BASE_URL = "https://staging.tudominio.com"
    # USE_HTTPS = True
    pass
    
elif ENVIRONMENT == 'development':
    # üíª DESARROLLO - Tu configuraci√≥n actual
    QR_BASE_URL = "http://localhost:7000"
    USE_HTTPS = False
