# Generated by Django 5.2.2 on 2025-06-08 02:41

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('menu', '0001_initial'),
        ('restaurants', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order_number', models.CharField(blank=True, max_length=20, unique=True)),
                ('customer_name', models.CharField(max_length=100)),
                ('customer_phone', models.CharField(blank=True, max_length=20)),
                ('customer_email', models.EmailField(blank=True, max_length=254)),
                ('order_type', models.CharField(choices=[('dine_in', 'Mesa del restaurante'), ('takeaway', 'Para llevar'), ('delivery', 'Domicilio')], default='dine_in', max_length=20)),
                ('table_number', models.CharField(blank=True, help_text='Número de mesa (si aplica)', max_length=10)),
                ('delivery_address', models.TextField(blank=True, help_text='Dirección de entrega (si aplica)')),
                ('status', models.CharField(choices=[('pending', 'Pendiente de confirmación'), ('confirmed', 'Confirmado'), ('preparing', 'En preparación'), ('ready', 'Listo para entregar'), ('delivered', 'Entregado'), ('cancelled', 'Cancelado')], default='pending', max_length=20)),
                ('estimated_preparation_time', models.PositiveIntegerField(default=30, help_text='Tiempo estimado de preparación en minutos')),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('delivery_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(blank=True, choices=[('cash', 'Efectivo'), ('card', 'Tarjeta'), ('transfer', 'Transferencia'), ('digital_wallet', 'Billetera digital')], max_length=20)),
                ('payment_status', models.CharField(choices=[('pending', 'Pendiente'), ('paid', 'Pagado'), ('refunded', 'Reembolsado')], default='pending', max_length=20)),
                ('customer_notes', models.TextField(blank=True, help_text='Notas especiales del cliente')),
                ('internal_notes', models.TextField(blank=True, help_text='Notas internas del restaurante')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('ready_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('rating', models.PositiveIntegerField(blank=True, help_text='Calificación del cliente (1-5)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('review', models.TextField(blank=True, help_text='Reseña del cliente')),
                ('customer_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='restaurants.restaurant')),
            ],
            options={
                'verbose_name': 'Pedido',
                'verbose_name_plural': 'Pedidos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('variant_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('addons_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('modifiers_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('special_instructions', models.TextField(blank=True, help_text='Instrucciones especiales para este item')),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('preparing', 'Preparando'), ('ready', 'Listo'), ('served', 'Servido')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('menu_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='menu.menuitem')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.order')),
                ('selected_addons', models.ManyToManyField(blank=True, help_text='Extras agregados al producto', to='menu.menuaddon')),
                ('selected_modifiers', models.ManyToManyField(blank=True, help_text='Modificaciones al producto', to='menu.menumodifier')),
                ('selected_variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='menu.menuvariant')),
            ],
            options={
                'verbose_name': 'Item del Pedido',
                'verbose_name_plural': 'Items del Pedido',
            },
        ),
        migrations.CreateModel(
            name='OrderStatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_status', models.CharField(blank=True, max_length=20)),
                ('new_status', models.CharField(max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='orders.order')),
            ],
            options={
                'verbose_name': 'Historial de Estado',
                'verbose_name_plural': 'Historial de Estados',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['restaurant', 'status'], name='orders_orde_restaur_17016b_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['order_number'], name='orders_orde_order_n_f3ada5_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['created_at'], name='orders_orde_created_0e92de_idx'),
        ),
        migrations.AddIndex(
            model_name='orderitem',
            index=models.Index(fields=['order', 'status'], name='orders_orde_order_i_3360fc_idx'),
        ),
    ]
